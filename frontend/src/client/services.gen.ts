// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import { type InstanceInstanceDetailsError, type InstanceInstanceDetailsResponse, type InstanceCreateInstanceData, type InstanceCreateInstanceError, type InstanceCreateInstanceResponse, InstanceCreateInstanceResponseTransformer, type RootRootError, type RootRootResponse, type UserCreateUserData, type UserCreateUserError, type UserCreateUserResponse, type UserLoginUserData, type UserLoginUserError, type UserLoginUserResponse, type UserGetUserSessionError, type UserGetUserSessionResponse, type UserLogoutUserError, type UserLogoutUserResponse, UserCreateUserResponseTransformer } from './types.gen';

export const client = createClient(createConfig());

export class InstanceService {
    /**
     * Instance Details
     */
    public static instanceInstanceDetails<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<InstanceInstanceDetailsResponse, InstanceInstanceDetailsError, ThrowOnError>({
            ...options,
            url: '/instance/details'
        });
    }
    
    /**
     * Create Instance
     */
    public static instanceCreateInstance<ThrowOnError extends boolean = false>(options: Options<InstanceCreateInstanceData, ThrowOnError>) {
        return (options?.client ?? client).post<InstanceCreateInstanceResponse, InstanceCreateInstanceError, ThrowOnError>({
            ...options,
            url: '/instance/create',
            responseTransformer: InstanceCreateInstanceResponseTransformer
        });
    }
    
}

export class RootService {
    /**
     * Root
     */
    public static rootRoot<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<RootRootResponse, RootRootError, ThrowOnError>({
            ...options,
            url: '/'
        });
    }
    
}

export class UserService {
    /**
     * Create User
     */
    public static userCreateUser<ThrowOnError extends boolean = false>(options: Options<UserCreateUserData, ThrowOnError>) {
        return (options?.client ?? client).post<UserCreateUserResponse, UserCreateUserError, ThrowOnError>({
            ...options,
            url: '/user/register',
            responseTransformer: UserCreateUserResponseTransformer
        });
    }
    
    /**
     * Login User
     */
    public static userLoginUser<ThrowOnError extends boolean = false>(options: Options<UserLoginUserData, ThrowOnError>) {
        return (options?.client ?? client).post<UserLoginUserResponse, UserLoginUserError, ThrowOnError>({
            ...options,
            url: '/user/login'
        });
    }
    
    /**
     * Get User Session
     */
    public static userGetUserSession<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<UserGetUserSessionResponse, UserGetUserSessionError, ThrowOnError>({
            ...options,
            url: '/user/session'
        });
    }
    
    /**
     * Logout User
     */
    public static userLogoutUser<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<UserLogoutUserResponse, UserLogoutUserError, ThrowOnError>({
            ...options,
            url: '/user/logout'
        });
    }
    
}