// This file is auto-generated by @hey-api/openapi-ts

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type InstanceCreateRequest = {
    os_type: OsType;
    instance_plan: InstancePlan;
    instance_name: string;
    root_password: string;
};

export type InstanceCreateResponse = {
    instance_name: string;
    instance_status: string;
    created_at: Date;
};

export type InstanceDetails = {
    instance_package: Array<InstancePlan>;
    os_image: Array<OsType>;
};

export type InstancePlan = {
    instance_plan_id: number;
    instance_package_name: string;
    vcpu_amount: number;
    ram_amount: number;
    storage_amount: number;
    cost_hour: number;
};

export type OsType = {
    os_type_id: number;
    os_image_name: string;
    os_image_version: string;
};

export type UserCreateRequest = {
    username: string;
    email: string;
    password: string;
};

export type UserCreateResponse = {
    username: string;
    email: string;
    balance: number;
    created_at: Date;
};

export type UserLoginRequest = {
    username: string;
    password: string;
};

export type UserLoginResponse = {
    message: string;
};

export type UserSessionResponse = {
    is_authenticated: boolean;
    username: (string | null);
    email: (string | null);
    role: (string | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type InstanceInstanceDetailsResponse = (InstanceDetails);

export type InstanceInstanceDetailsError = unknown;

export type InstanceCreateInstanceData = {
    body: InstanceCreateRequest;
};

export type InstanceCreateInstanceResponse = (InstanceCreateResponse);

export type InstanceCreateInstanceError = (HTTPValidationError);

export type RootRootResponse = (unknown);

export type RootRootError = unknown;

export type UserCreateUserData = {
    body: UserCreateRequest;
};

export type UserCreateUserResponse = (UserCreateResponse);

export type UserCreateUserError = (HTTPValidationError);

export type UserLoginUserData = {
    body: UserLoginRequest;
};

export type UserLoginUserResponse = (UserLoginResponse);

export type UserLoginUserError = (HTTPValidationError);

export type UserGetUserSessionResponse = (UserSessionResponse);

export type UserGetUserSessionError = unknown;

export type UserLogoutUserResponse = (UserLoginResponse);

export type UserLogoutUserError = unknown;

export type InstanceCreateInstanceResponseTransformer = (data: any) => Promise<InstanceCreateInstanceResponse>;

export type InstanceCreateResponseModelResponseTransformer = (data: any) => InstanceCreateResponse;

export const InstanceCreateResponseModelResponseTransformer: InstanceCreateResponseModelResponseTransformer = data => {
    if (data?.created_at) {
        data.created_at = new Date(data.created_at);
    }
    return data;
};

export const InstanceCreateInstanceResponseTransformer: InstanceCreateInstanceResponseTransformer = async (data) => {
    InstanceCreateResponseModelResponseTransformer(data);
    return data;
};

export type UserCreateUserResponseTransformer = (data: any) => Promise<UserCreateUserResponse>;

export type UserCreateResponseModelResponseTransformer = (data: any) => UserCreateResponse;

export const UserCreateResponseModelResponseTransformer: UserCreateResponseModelResponseTransformer = data => {
    if (data?.created_at) {
        data.created_at = new Date(data.created_at);
    }
    return data;
};

export const UserCreateUserResponseTransformer: UserCreateUserResponseTransformer = async (data) => {
    UserCreateResponseModelResponseTransformer(data);
    return data;
};